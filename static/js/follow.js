// Generated by CoffeeScript 1.3.3

/*
Hello, you're an inquisitive young one for looking into the source code!
This JavaScript wil look like a mess! It's been generated by CoffeeScript,
If you're here, I'm guessing you wondering how we did some of the things on our site?
I am happy to tell you!
First off, the eye following images work by determining the x,y from the pictures (centers)
to the mouse, when the mouse hovers over the that "About Us" slide.
From that, we do some simple trig. using tans to determine the angles, and use switch cases to add the various classes
needed to tell the "pictures" where to look!

What to know more about the code? Give me a tweet! (Don't be afraid, I compliment you've looked in this code!)
I'm @cameronmaske on Twitter, or pop me an email at c@meronmaske.com
Check out the full source on github! https://github.com/cameronmaske/cameronmaske.com
*/


(function() {

  $(function() {
    return $('body').on("mousemove", function(event) {
      var cam, cam_looking, change, looking_at, position;
      cam = $('#me');
      position = function(person) {
        var degree, rads, x, y;
        x = event.pageX - person.offset().left - person.width() / 2;
        y = event.pageY - person.offset().top - person.height() / 2;
        rads = Math.atan2(y, x) + Math.PI;
        return degree = rads / (Math.PI / 180);
      };
      change = function(position, person, name) {
        var looking;
        looking = person.data('looking');
        if (looking !== position) {
          person.removeClass(looking);
          person.addClass(position);
          return person.data('looking', position);
        }
      };
      looking_at = function(person, degree, name) {
        switch (false) {
          case !(degree > 340 || degree < 20):
            return change("left", person, name);
          case !(degree > 20 && degree < 70):
            return change("up-left", person, name);
          case !(degree > 70 && degree < 110):
            return change("up", person, name);
          case !(degree > 110 && degree < 160):
            return change("up-right", person, name);
          case !(degree > 160 && degree < 200):
            return change("right", person, name);
          case !(degree > 200 && degree < 250):
            return change("down-right", person, name);
          case !(degree > 250 && degree < 290):
            return change("down", person, name);
          case !(degree > 290 && degree < 340):
            return change("down-left", person, name);
        }
      };
      cam_looking = position(cam);
      return looking_at(cam, cam_looking, "me");
    });
  });

}).call(this);
